ckpt: null # eventually this will control resuming runs
validate: false # if true, only validate the model, don't train
logger:
    # set to true to log to neptune.ai
    neptune: false 
    # please change "test" to something unique to your task
    project: openprot/test 
    # will log to workdir and neptune.ai with this name
    name: default 
    # if not null, will duplicate stdout and stderr to workdir/{name}/{logfile}
    logfile: null 
    # if null, will log every epoch, otherwise every this number of steps
    train_log_freq: 1
    val_log_freq: null 
trainer:
    accelerator: auto
    devices: 1
    max_epochs: 5
    enable_progress_bar: false
    limit_train_batches: 1.0
    limit_val_batches: 1.0
    num_sanity_val_steps: 0
    gradient_clip_val: 1.0
    accumulate_grad_batches: 1
    val_check_interval: null
    check_val_every_n_epoch: 1
    logger: false

# custom args to OpenProtDataset and elsewhere
data: 
    num_workers: 0
    batch: 32
    crop: 512
    overfit: false

datasets:
    # register datasets
    # openprot.data.pdb.PDBDataset: 
    #     # custom args for every dataset
    #     path: /data/cb/scratch/datasets/pdb_npz
    openprot.data.afdb.AFDBDataset:
        path: /data/cb/scratch/datasets/afdb_swissprot_v4/afdb_swissprot_v4

tracks:
    # register tracks here
    openprot.tracks.structure.StructureTrack: 
        # custom args for every track
        embedder: 
            type: sinusoidal
            num_freqs: 50
            max_period: 100
        decoder:
            type: sinusoidal
            max_period: 100
    openprot.tracks.sequence.SequenceTrack:
        param: 0

model: # custom args
    in_norm: false
    dim: 1024
    blocks: 24
    heads: 16
    ff_expand: 4

optimizer:
    type: Adam
    lr: 1e-4